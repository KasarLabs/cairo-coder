services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: 'postgresql'
    shm_size: 1g
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - cairo_coder
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U yo -d cairo_coder_db']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    container_name: 'backend'
    build:
      context: .
      dockerfile: backend.dockerfile
    ports:
      - 3001:3001
    extra_hosts:
      - host.docker.internal:host-gateway
    env_file:
      - packages/backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cairo_coder

  ingester:
    build:
      context: .
      dockerfile: ingest.dockerfile
    profiles: ['ingester']
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cairo_coder

networks:
  cairo_coder:

volumes:
  postgres_data:
