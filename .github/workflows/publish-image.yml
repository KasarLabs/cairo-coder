---
name: Build and Publish Docker Images

on:
  workflow_call:
    inputs:
      version:
        description: Version to tag the images with
        required: true
        type: string
      registry:
        description: Container registry domain
        required: false
        default: ghcr.io
        type: string
      is-release:
        description: Whether this is a release build
        required: false
        default: false
        type: boolean
  
  workflow_dispatch:
    inputs:
      version:
        description: Version to tag the images
        required: true
        type: string
      registry:
        description: Container registry domain
        required: false
        default: ghcr.io
        type: string
      is-release:
        description: Whether this is a release build
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  REGISTRY: ${{ inputs.registry }}
  IMAGE_BASE: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, ingester]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/${{ matrix.component }}
          tags: |
            type=raw,value=v${{ inputs.version }}
            type=raw,value=latest,enable=${{ inputs.is-release }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./${{ matrix.component }}.dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Generate attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/${{ matrix.component }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true