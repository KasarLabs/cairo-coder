name: Create and publish a Docker image

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create config file
        run: |
          mkdir -p packages/agents
          cat > packages/agents/config.toml << 'EOL'
          [API_KEYS]
          OPENAI = "${{ secrets.OPENAI }}"
          ANTHROPIC = "${{ secrets.ANTHROPIC }}"
          GEMINI = "${{ secrets.GEMINI }}"

          [VECTOR_DB]
          POSTGRES_USER = "${{ secrets.POSTGRES_USER }}"
          POSTGRES_HOST = "postgres"
          POSTGRES_ROOT_DB = "${{ secrets.POSTGRES_ROOT_DB }}"
          POSTGRES_PASSWORD = "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_PORT = "${{ secrets.POSTGRES_PORT }}"

          [GENERAL]
          PORT = 3001
          SIMILARITY_MEASURE = "cosine"

          [HOSTED_MODE]
          DEFAULT_CHAT_PROVIDER = "gemini"
          DEFAULT_CHAT_MODEL = "Gemini Flash 2.5"
          DEFAULT_FAST_CHAT_PROVIDER = "gemini"
          DEFAULT_FAST_CHAT_MODEL = "Gemini Flash 2.5"
          DEFAULT_EMBEDDING_PROVIDER = "openai"
          DEFAULT_EMBEDDING_MODEL = "Text embedding 3 large"

          [VERSIONS]
          STARKNET_FOUNDRY = "0.37.0"
          SCARB = "2.9.2"
          EOL

      - name: Create env file
        run: |
          cat > .env << 'EOL'
          POSTGRES_USER = "${{ secrets.POSTGRES_USER }}"
          POSTGRES_HOST = "localhost"
          POSTGRES_ROOT_DB = "${{ secrets.POSTGRES_ROOT_DB }}"
          POSTGRES_PASSWORD = "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_PORT = "${{ secrets.POSTGRES_PORT }}"
          EOL

      - name: Create backend env file
        run: |
          touch packages/backend/.env

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./backend.dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
